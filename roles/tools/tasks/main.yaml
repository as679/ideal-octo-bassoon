---
- name: Tools | sudo | configure path
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin$'
    line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin'
    validate: /usr/sbin/visudo -cf %s
- name: Tools | kubectl | Find lastest version
  uri:
    url: https://dl.k8s.io/release/stable.txt
    return_content: yes
  register: latest_kubectl
- name: Tools | kubectl | Download latest
  get_url:
    url: "https://dl.k8s.io/release/{{ latest_kubectl.content }}/bin/linux/amd64/kubectl"
    dest: /usr/local/bin/kubectl
    mode: '0755'
- name: Tools | Helm | Download helm
  shell:
    "curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash"
- name: Tools | k9s | Download k9s
  get_url:
    url: https://github.com/derailed/k9s/releases/download/v0.25.4/k9s_Linux_x86_64.tar.gz
    dest: /tmp/k9s_Linux_x86_64.tar.gz
- name: Tools | k9s | Extract k9s
  unarchive:
    src: /tmp/k9s_Linux_x86_64.tar.gz
    dest: /usr/local/bin
    remote_src: yes
- name: Tools | Yum | Add packages
  yum:
    name:
      - python39
      - python39-pip
      - unzip
      - git
- name: Tools | Pip | Install packages
  pip:
    name: "{{ item }}"
  loop:
    - kubernetes
    - openshift
    - boto3
- name: Tools | Copy | files
  copy:
    src: "{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: '0755'
  loop:
    - update_coredns.py
- name: Tools | Handle AWS | If required
  block:
  - name: Tools | AWSCLI | Download
    get_url:
      url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
      dest: /tmp/awscliv2.zip
  - name: Tools | AWSCLI | Extract
    unarchive:
      src: /tmp/awscliv2.zip
      dest: /tmp
      remote_src: yes
  - name: Tools | AWSCLI | Install
    shell:
      "/tmp/aws/install"
  - name: Tools | Instance | Collect instance-id
    uri:
      url: http://169.254.169.254/latest/meta-data/instance-id
      return_content: yes
    register: aws_instance_id
  - name: Tools | Instance | Collect region
    uri:
      url: http://169.254.169.254/latest/meta-data/placement/region
      return_content: yes
    register: aws_region_id
  - name: Tools | Instance | Collect tags
    amazon.aws.ec2_tag_info:
      region: "{{ aws_region_id.content }}"
      resource: "{{ aws_instance_id.content }}"
    register: aws_instance_tags
  when: cloud == 'aws'
